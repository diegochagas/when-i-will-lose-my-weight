{"version":3,"sources":["styles/global.js","store/modules/informations/actions.js","services/api.js","pages/Home/styles.js","pages/Home/index.js","pages/Results/styles.js","pages/Results/index.js","routes/index.js","services/history.js","store/modules/informations/reducer.js","store/modules/rootReducer.js","store/modules/informations/sagas.js","store/modules/rootSaga.js","store/index.js","store/persistReducers.js","store/createStore.js","App.js","index.js"],"names":["createGlobalStyle","types","UPDATE_INFORMATIONS_REQUEST","UPDATE_INFORMATIONS_SUCCESS","UPDATE_INFORMATIONS_FAILURE","updateInformationsSuccess","informations","type","payload","BMI","weight","height","value","category","formatDate","date","getDate","getMonth","getFullYear","Form","styled","form","Home","useState","setWeight","setHeight","actualDate","Date","dispatch","useDispatch","onSubmit","event","data","preventDefault","htmlFor","id","defaultValue","onChange","target","className","disabled","isNaN","Container","div","Results","useSelector","state","map","information","key","bmi","to","Routes","path","exact","component","history","createBrowserHistory","INITIAL_STATE","combineReducers","action","error","getInformations","firstWeight","bmiCategories","push","toFixed","setDate","put","all","takeLatest","rootSaga","reducers","sagaMiddleware","createSagaMiddleware","sagaMonitor","middlewares","store","enhancer","applyMiddleware","createStore","rootReducer","persistReducer","storage","whitelist","persistor","persistStore","run","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.097ae805.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Roboto:400,700&display=swap');\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  *:focus {\r\n    outline: 0;\r\n  }\r\n  html, body, #root {\r\n    height: 100%;\r\n  }\r\n  body {\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n  body, input, button {\r\n    font: 14px 'Roboto', sans-serif;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  ul {\r\n    list-style: none;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n\r\n  body {\r\n    background-color: #9bc86a;\r\n  }\r\n\r\n  #root {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n  }\r\n\r\n  label {\r\n    color: white;\r\n    font-weight: bold;\r\n  }\r\n\r\n  input {\r\n    height: 40px;\r\n    border-radius: 5px;\r\n    border: none;\r\n    margin: 5px;\r\n    padding: 5px 10px;\r\n    color: gray;\r\n  }\r\n\r\n  .btn {\r\n    border: none;\r\n    display: block;\r\n    color: #000;\r\n    border-radius: 5px 5px;\r\n    text-decoration: none;\r\n    text-transform: uppercase;\r\n    background-color: #ffec86;\r\n    padding: 13px 20px;\r\n    margin: 5px 0;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    width: 100%;\r\n\r\n    &:hover {\r\n      background-color: #ffe359;\r\n    }\r\n\r\n    &:disabled {\r\n      background-color: lightgoldenrodyellow;\r\n      color: lightgray;\r\n    }\r\n  }\r\n`;\r\n","export const types = {\r\n  UPDATE_INFORMATIONS_REQUEST: '@informations/UPDATE_INFORMATIONS_REQUEST',\r\n  UPDATE_INFORMATIONS_SUCCESS: '@informations/UPDATE_INFORMATIONS_SUCCESS',\r\n  UPDATE_INFORMATIONS_FAILURE: '@informations/UPDATE_INFORMATIONS_FAILURE',\r\n};\r\n\r\nexport function updateInformationsRequest(data) {\r\n  return {\r\n    type: types.UPDATE_INFORMATIONS_REQUEST,\r\n    payload: { data },\r\n  };\r\n}\r\n\r\nexport function updateInformationsSuccess(informations) {\r\n  return {\r\n    type: types.UPDATE_INFORMATIONS_SUCCESS,\r\n    payload: { informations },\r\n  };\r\n}\r\n\r\nexport function updateInformationsFailure(error) {\r\n  return {\r\n    type: types.UPDATE_INFORMATIONS_FAILURE,\r\n    payload: { error },\r\n  };\r\n}\r\n","export function BMI(weight, height) {\r\n  const value = weight / (height * height);\r\n  let category = '';\r\n\r\n  if (value < 18.5) category = 'Underweight';\r\n  else if (value > 18.5 && value < 24.9) category = 'Normal weight';\r\n  else if (value > 25 && value < 29.9) category = 'Overweight';\r\n  else category = 'Obesity';\r\n\r\n  return { value, category };\r\n}\r\n\r\nexport function formatDate(date) {\r\n  const formatedDate = `${date.getDate()}/${date.getMonth() +\r\n    1}/${date.getFullYear()}`;\r\n\r\n  return formatedDate;\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 30px;\r\n\r\n  div {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    label {\r\n      flex: 1;\r\n    }\r\n\r\n    input {\r\n      flex: 4;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { updateInformationsRequest } from '~/store/modules/informations/actions';\r\nimport { formatDate } from '~/services/api';\r\nimport { Form } from './styles';\r\n\r\nexport default function Home() {\r\n  const [weight, setWeight] = useState('');\r\n  const [height, setHeight] = useState('');\r\n  const actualDate = new Date();\r\n  const dispatch = useDispatch();\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    dispatch(updateInformationsRequest({ weight, height, actualDate }));\r\n  }\r\n\r\n  function checkValues() {\r\n    return (\r\n      isNaN(weight) ||\r\n      weight === '' ||\r\n      height === '' ||\r\n      isNaN(height) ||\r\n      weight === 0 ||\r\n      height === 0\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"date\">Actual Date</label>\r\n\r\n        <input id=\"date\" type=\"text\" defaultValue={formatDate(actualDate)} />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"weight\">Weight (kg)</label>\r\n\r\n        <input\r\n          id=\"weight\"\r\n          type=\"text\"\r\n          onChange={event => setWeight(event.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"height\">Height (m)</label>\r\n\r\n        <input\r\n          id=\"height\"\r\n          type=\"text\"\r\n          onChange={event => setHeight(event.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"submit\" className=\"btn\" disabled={checkValues()}>\r\n          Show results\r\n        </button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n\r\n  h2 {\r\n    color: white;\r\n    margin: 10px auto;\r\n  }\r\n\r\n  .table {\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 5px;\r\n    margin: 20px 20px 5px 20px;\r\n    width: 100%;\r\n  }\r\n\r\n  .thead {\r\n    background-color: #ffec86;\r\n    font-weight: bold;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    border-radius: 5px 5px 0 0;\r\n    align-items: center;\r\n\r\n    span {\r\n      display: inline-block;\r\n      padding: 20px 10px;\r\n      text-transform: uppercase;\r\n      display: inline-block;\r\n      text-align: center;\r\n      width: 25%;\r\n    }\r\n  }\r\n\r\n  .line {\r\n    background-color: #fff;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n\r\n    span {\r\n      display: inline-block;\r\n      padding: 20px 10px;\r\n      color: #757575;\r\n      text-align: center;\r\n      width: 25%;\r\n    }\r\n\r\n    &:last-child {\r\n      border-radius: 0 0 5px 5px;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Container } from './styles';\r\n\r\nexport default function Results() {\r\n  const informations = useSelector(state => state.informations);\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"table\">\r\n        <h2>Losing 1kg per week</h2>\r\n\r\n        <div className=\"thead\">\r\n          <span>Date</span>\r\n\r\n          <span>Weight (kg)</span>\r\n\r\n          <span>BMI</span>\r\n\r\n          <span>BMI Categories</span>\r\n        </div>\r\n\r\n        {informations.map(information => (\r\n          <div className=\"line\" key={information.weight}>\r\n            <span>{information.date}</span>\r\n\r\n            <span>{information.weight}</span>\r\n\r\n            <span>{information.bmi}</span>\r\n\r\n            <span>{information.category}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div>\r\n        <Link to=\"/\" className=\"btn\">\r\n          Go back to home\r\n        </Link>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Home from '../pages/Home';\r\nimport Results from '../pages/Results';\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      \r\n      <Route path=\"/results\" component={Results} />\r\n    </Switch>\r\n  );\r\n}\r\n","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;\r\n","import { types } from './actions';\r\n\r\nconst INITIAL_STATE = {\r\n  informations: null,\r\n};\r\n\r\nexport default function informations(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case types.UPDATE_INFORMATIONS_SUCCESS:\r\n      return action.payload.informations;\r\n    case types.UPDATE_INFORMATIONS_FAILURE:\r\n      return action.payload.error;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport informations from './informations/reducer';\r\n\r\nexport default combineReducers({ informations });\r\n","import { takeLatest, put, all } from 'redux-saga/effects';\r\n\r\nimport history from '~/services/history';\r\n\r\nimport { BMI, formatDate } from '~/services/api';\r\n\r\nimport {\r\n  types,\r\n  updateInformationsSuccess,\r\n  updateInformationsFailure,\r\n} from './actions';\r\n\r\nexport function* getInformations({ payload }) {\r\n  try {\r\n    const { weight: firstWeight, height, actualDate: date } = payload.data;\r\n    const informations = [];\r\n\r\n    let weight = firstWeight;\r\n    let bmiCategories = '';\r\n\r\n    do {\r\n      const { value, category } = BMI(weight, height);\r\n\r\n      bmiCategories = category;\r\n\r\n      informations.push({\r\n        date: formatDate(date),\r\n        weight,\r\n        height,\r\n        bmi: value.toFixed(2),\r\n        category,\r\n      });\r\n\r\n      weight--;\r\n\r\n      date.setDate(date.getDate() + 7);\r\n    } while (bmiCategories === 'Obesity' || bmiCategories === 'Overweight');\r\n\r\n    yield put(updateInformationsSuccess(informations));\r\n\r\n    history.push('/results');\r\n  } catch (err) {\r\n    yield put(updateInformationsFailure(err));\r\n  }\r\n}\r\n\r\nexport default all([\r\n  takeLatest(types.UPDATE_INFORMATIONS_REQUEST, getInformations),\r\n]);\r\n","import { all } from 'redux-saga/effects';\r\n\r\nimport informations from './informations/sagas';\r\n\r\nexport default function* rootSaga() {\r\n  return yield all([informations]);\r\n}\r\n","import { persistStore } from 'redux-persist';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport createStore from './createStore';\r\nimport persistReducers from './persistReducers';\r\nimport rootReducer from './modules/rootReducer';\r\nimport rootSaga from './modules/rootSaga';\r\n\r\nconst sagaMonitor = null;\r\n\r\nconst sagaMiddleware = createSagaMiddleware({ sagaMonitor });\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nconst store = createStore(persistReducers(rootReducer), middlewares);\r\nconst persistor = persistStore(store);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport { store, persistor };","import storage from 'redux-persist/lib/storage';\r\nimport { persistReducer } from 'redux-persist';\r\n\r\nexport default reducers => {\r\n  const persistedReducer = persistReducer({\r\n    key: 'weight',\r\n    storage,\r\n    whitelist: ['informations'],\r\n  }, reducers);\r\n\r\n  return persistedReducer;\r\n}","import { createStore, applyMiddleware } from 'redux';\r\n\r\nexport default (reducers, middlewares) => {\r\n  const enhancer = applyMiddleware(...middlewares);\r\n\r\n  return createStore(reducers, enhancer);\r\n}","import React from 'react';\r\nimport { Router } from 'react-router-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport GlobalStyle from './styles/global';\r\nimport Routes from './routes';\r\nimport history from './services/history';\r\nimport { store, persistor } from './store';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate persistor={persistor}>\r\n        <Router history={history}>\r\n          <Routes />\r\n\r\n          <GlobalStyle />\r\n        </Router>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}